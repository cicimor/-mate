import time
import subprocess
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
import json
JSON_FILE = "data.json"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
URL = "https://api.hashmate-bot.com/v1/mining/pools"
URL_TG = "https://web.telegram.org/a/#7560219861"
INTERVAL = 900  #  (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
BUTTON_CLASS = "bot-menu"

chrome_path = "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"  # –ü—É—Ç—å –∫ Chrome
subprocess.Popen([
    chrome_path,
    "--remote-debugging-port=9222",
    "--user-data-dir=C:/selenium_chrome_profile",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Å–µ—Å—Å–∏–∏
    "--new-window"
])

time.sleep(2)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–º—É –±—Ä–∞—É–∑–µ—Ä—É
options = webdriver.ChromeOptions()
options.debugger_address = "localhost:9222"  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º—É Chrome

driver = webdriver.Chrome(options=options)

def open_telegram():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Telegram Web –≤ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ."""
    print("üåê –û—Ç–∫—Ä—ã—Ç–∏–µ Telegram Web...")
    driver.get(URL_TG)
    time.sleep(5)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    # global tg_window
    # tg_window = driver.current_window_handle  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤–∫–ª–∞–¥–∫—É —Å Telegram




def click_button():
    """–ò—â–µ—Ç –∏ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É."""
    try:
        time.sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        button = driver.find_element(By.CLASS_NAME, BUTTON_CLASS)  # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ –∫–ª–∞—Å—Å—É
        if button:
            button.click()
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞.")
        else:
            print("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: {e}")


def load_existing_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å."""
    try:
        with open(JSON_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

def save_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON."""
    with open(JSON_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

def scrape_data():
    """–°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
    try:
        driver.get(URL)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∞–π—Ç
        time.sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏

        pre_element = driver.find_element(By.TAG_NAME, "pre")
        raw_data = pre_element.text  # –ü–æ–ª—É—á–∞–µ–º JSON –∏–∑ <pre>

        return json.loads(raw_data)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ JSON
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
        return []

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É."""  
    while True:
        open_telegram()
        time.sleep(5)
        click_button()

        time.sleep(15)

        existing_data = load_existing_data()
        new_data = scrape_data()

        existing_block_numbers = {item["lastBlockNumber"] for item in existing_data}
        for entry in new_data:
            
            if isinstance(entry, dict):  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ entry ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å
             if entry["lastBlockNumber"] not in existing_block_numbers:
                if entry["lastBlockNumber"] not in existing_block_numbers:
                 existing_data.append(entry)
            else:
                print("entry –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º:", entry)

        save_data(existing_data)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {INTERVAL // 60} –º–∏–Ω—É—Ç.")
        time.sleep(INTERVAL)  # –ñ–¥–µ–º 10 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("‚õî –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    finally:
        driver.quit()
